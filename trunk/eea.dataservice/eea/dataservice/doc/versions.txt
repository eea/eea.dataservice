Overview
========

Datasets provide a versioning system based on a version ID to group certains
objects and effectiveDate to determine version number.

Lets use the sandbox.

    >>> self.loginAsPortalOwner()
    >>> _ = self.portal.invokeFactory('Folder', 'sandbox')
    >>> sandbox = portal._getOb('sandbox')

Lets add a Dataset.

    >>> _ = sandbox.invokeFactory('Data', 'data1')
    >>> data1 = sandbox.data1
    >>> form = {
    ...   'title': 'Data 1',
    ...   'description': 'Organisation description 1',
    ...   'effectiveDate': '11/11/2008',
    ...   'geographicCoverage': ['ro', 'it', 'dk'],
    ...   'geoQuality': ('1', '2', '1', '-1', '0'),
    ...   'eeaManagementPlan': ('2008', '123456'),
    ...   'lastUpload': '11/11/2008',
    ...   'scale': '1000000',
    ...   'dataOwner': 'http://organisation.url',
    ...   'processor': 'http://organisation.url',
    ...   'temporalCoverage': ['2008', '2009'],
    ...   'disclaimer': 'Some disclaimer',
    ...   'contact': 'Some contact',
    ...   'geoAccuracy': 'Geographic accuracy',
    ...   'referenceSystem': 'References system',
    ...   'dataSource': 'Data source',
    ...   'moreInfo': 'More info',
    ...   'methodology': 'Methodology',
    ...   'units': 'units',
    ...   'shortId': '1111',
    ... }
    >>> data1.processForm(values=form, data=1, metadata=1)

Now lets create a new version of the above dataset.

    >>> createVersionView = data1.unrestrictedTraverse('@@createVersion')
    >>> vertmp = createVersionView()
    >>> dataVer = sandbox._getOb('copy_of_data-1')

Verify if properties were copyed on the new version.

    >>> dataVer.Title() == data1.Title()
    True
    >>> dataVer.getContact() == data1.getContact()
    True
    >>> dataVer.getDataSource() == data1.getDataSource()
    True

Effective date of the new version object should be greater then its
parent effective date.

    >>> dataVer.getEffectiveDate() > data1.getEffectiveDate()
    True

Both objects should have the same version ID.

    >>> from eea.dataservice.versions.interfaces import IVersionControl
    >>> IVersionControl(dataVer).getVersionId() == IVersionControl(data1).getVersionId()
    True





